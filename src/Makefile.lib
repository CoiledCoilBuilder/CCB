# ccb static library multiple-machine Makefile

SHELL = /bin/sh

# Definitions

CCBROOT = ccb
CCBVERSION = 1.0

EXE =	lib$(CCBROOT)_$@.a

SRC =	atom.cpp backbone_coiledcoil.cpp backbone.cpp backbonehandler.cpp bitmask.cpp ccb.cpp ccbio.cpp domain.cpp error.cpp group.cpp  math_extra.cpp memory.cpp output.cpp output_pdb.cpp site.cpp universe.cpp 

INC =	atom.h backbone_coiledcoil.h backbone.h backbonehandler.h bitmask.h ccb.h ccbio.h ccbtype.h constants.h domain.h error.h group.h math_extra.h memory.h output.h output_pdb.h pointers.h site.h sort.h style_backbone.h style_output.h universe.h version.h 

OBJ =	$(SRC:.cpp=.o)

# Targets

help:
	@echo 'Type "make target" where target is one of:'
	@echo ''
	@files="`ls MAKE/Makefile.*`"; \
	for file in $$files; do head -1 $$file; done

.DEFAULT:
	@test -f MAKE/Makefile.$@
	@if [ ! -d Obj_$@ ]; then mkdir Obj_$@; fi
	@cp -p $(SRC) $(INC) Obj_$@
	@cp MAKE/Makefile.$@ Obj_$@/Makefile
	@cp MAKE/Makefile.base Obj_$@/Makefile.base
	@cd Obj_$@; \
	$(MAKE) $(MFLAGS) "OBJ = $(OBJ)" \
          "INC = $(INC)" "SHFLAGS =" "EXE = ../$(EXE)" \
           "CCBROOT = $(CCBROOT)" "CCBVERSION = $(CCBVERSION)" lib
	@rm -f libccb.a
	@ln -s $(EXE) libccb.a
	@if [ -d Obj_$@ ]; then cd Obj_$@; rm -f $(SRC) $(INC) Makefile*; fi
